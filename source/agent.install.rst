.. _agent.install:

OpenSVC agent installation
**************************

Package
=======

Download the lastest OpenSVC package available for your operating system of choice from http://repo.opensvc.com and install it. Depending on the operating system, and operating system version, you might need to satisfy dependencies using packages provided on this website.

The package post-installation steps are handled by the ``<OSVCROOT>/bin/postinstall`` script. This script can be safely executed on a node where OpenSVC is already installed.

Files
=====

The agent is installed in ``/opt/opensvc/`` on Unix and in ``%%ProgramFiles%%\opensvc\``  on Windows. This directory is referred to as ``<OSVCROOT>`` in this documentation.

The package installs the following directory tree:

::

	<OSVCROOT>/
	<OSVCROOT>/etc
	<OSVCROOT>/tmp
	<OSVCROOT>/bin
	<OSVCROOT>/bin/pkg
	<OSVCROOT>/bin/cron
	<OSVCROOT>/var
	<OSVCROOT>/var/sync
	<OSVCROOT>/var/lock
	<OSVCROOT>/usr
	<OSVCROOT>/usr/share
	<OSVCROOT>/usr/share/doc
	<OSVCROOT>/lib
	<OSVCROOT>/log

Cron jobs
=========

The package installs the following cron jobs, in (by order of preference), ``/etc/cron.d/opensvc``, ``/var/spool/cron/crontabs/root``, ``/var/spool/cron/root``:

::

	0,10,20,30,40,50 * * * * [ -x /opt/opensvc/bin/cron/opensvc ] && /opt/opensvc/bin/cron/opensvc >/dev/null 2>&1


Linux and HP-UX also have a helper to gather statistics:

::

	0,10,20,30,40,50 * * * * root [ -x /opt/opensvc/bin/perfagt.Linux ] && /opt/opensvc/bin/perfagt.Linux >/dev/null 2>&1

On Windows, OpenSVC installs a dedicated service to schedule these tasks.

Keys
====

On Unix systems, if the root account has no ssh key, a 1024 bits dsa key is generated by the package post-install. Production node keys must be trusted on all cluster nodes (PRD and DRP), whereas the keys of disaster recovery servers must not be trusted by production nodes. This setup is used for rsync file transfers and remote command execution.

Set host mode
=============

::

	<OSVCROOT>/bin/nodemgr set --param node.host_mode --value PRD


The valid host mode values are PRD, DEV, TST. The setting is stored in ``<OSVCROOT>/etc/node.conf``. On a fresh install this file does not exist. Note that the ``<OSVCROOT>/var/host_mode`` file is deprecated. Upgrading the new OpenSVC package on a system with a ``<OSVCROOT>/var/host_mode`` file will move the value to ``<OSVCROOT>/etc/node.conf``.

The host_mode setting is used to enforce the following policies:

*   Only PRD services are allowed to start on a PRD node
*   Only PRD nodes are allowed to push data to a PRD node

Set schedules
=============

Schedules are defined in ``<OSVCROOT>/etc/node.conf``. The OpenSVC agent schedules the following actions:

+--------------+----------------------------------------------+--------------+---------------------+-----------------+
| Action       | Description                                  | Section name | Default             | Statistic Delay |
+==============+==============================================+==============+=====================+=================+
| pushstats    | Send to the collector the collected          | [stats]      | 4am-6am daily       | Yes             |
|              | performance metrics since last pushstats     |              |                     |                 |
+--------------+----------------------------------------------+--------------+---------------------+-----------------+
| pushasset    | Send to the collector the collected node     | [asset]      | 4am-6am daily       | Yes             |
|              | information (cpu, memory, board, ...)        |              |                     |                 |
+--------------+----------------------------------------------+--------------+---------------------+-----------------+
| pushpkg      | Send to the collector the node installed     | [packages]   | 4am-6am daily       | Yes             |
|              | package database                             |              |                     |                 |
+--------------+----------------------------------------------+--------------+---------------------+-----------------+
| pushpatch    | Send to the collector the node installed     | [patches]    | 4am-6am daily       | Yes             |
|              | patch database                               |              |                     |                 |
+--------------+----------------------------------------------+--------------+---------------------+-----------------+
| checks       | Send to the collector the node checks        | [checks]     | 4am-6am daily       | Yes             |
|              | results (fs_u, fs_i, vg_u, ...)              |              |                     |                 |
+--------------+----------------------------------------------+--------------+---------------------+-----------------+
| node 	       | Send to the collector the compliance modules | [compliance] | 2am-6am sundays     | Yes             |
| compliance   | checks results                               |              |                     |                 |
| check	       |                                              |              |                     |                 |
+--------------+----------------------------------------------+--------------+---------------------+-----------------+

A typical schedule definition would look like:

::

	[section name]
	interval = 121
        schedule = 02:00-04:00@120 sat,sun


A reference ``node.conf`` file can be found on the node at ``<OSVCROOT>/usr/share/doc/node.conf``.

All actions except data syncs can be statistically delayed. The probability of running increases linearly from 25% to 100% during the first half of the action allowed period. This delay helps level to collector load.

Configuration for collector usage
=================================

By default, the collector is contacted by the node using the generic name ``dbopensvc`` on ports ``80`` and ``8000``. This name should be known to your prefered resolving mecanism : hosts, dns, ... If you choose to use the internet shared collector, the corresponding ip address must be set to the address of ``collector.opensvc.com``.

To override the default collector's xmlrpc urls, you can set them in node.conf:

::

	<OSVCROOT>/bin/nodemgr set --param node.dbopensvc --value https://collector.opensvc.com/feed/default/call/xmlrpc
	<OSVCROOT>/bin/nodemgr set --param node.dbcompliance --value https://collector.opensvc.com/init/compliance/call/xmlrpc


This override is recommended for xmlrpc encryption.

The collector requires the nodes to provide an authentication token (shared secret) with each request. The token is forged by the collector and stored on the node in ``node.conf``. The token initialization is handled by the command:

::

	<OSVCROOT>/bin/nodemgr register


Finally, you can accelerate the node discovery by forcing the execution of opensvc cron jobs after the package installation:

::

	<OSVCROOT>/bin/nodemgr --force pushasset
	<OSVCROOT>/bin/nodemgr --force pushpkg
	<OSVCROOT>/bin/nodemgr --force pushpatch
	<OSVCROOT>/bin/nodemgr --force pushstats
	<OSVCROOT>/bin/nodemgr --force pushservices
	<OSVCROOT>/bin/nodemgr --force checks


To disable collector communications, use:

::

	<OSVCROOT>/bin/nodemgr set --param node.dbopensvc --value None
	<OSVCROOT>/bin/nodemgr set --param node.dbcompliance --value None


HP-UX specificities
===================

The python package provided by HP will output garbage on exec because it won't find terminfo at the expected places. To fix that, you have to export ``TERMINFO=/usr/share/lib/terminfo`` from ``/etc/profile``

The HP-UX base system does not provide tools to handle scsi persistent reservations. You have to install the scu tool if you want to activate this feature.

Linux LVM2 specificities
========================

OpenSVC controls volume group activation and desactivation. Most Linux distributions activate all visible volume groups at boot, some even re-activate them upon de-activation events. These mecanisms can be disabled using the following setup. It also provides another protection against unwanted volume group activation from a secondary cluster node.

This setup tells LVM2 commands to activate only the objects tagged with the hostname. Opensvc makes sure the tags are set on start and unset on stop. Opensvc also purges all tags before adding the one it needs to activate a volume group, so opensvc can satisfy a start request on a service uncleanly shut down.

/etc/lvm/lvm.conf
-----------------

Add the following root-level configuration node:

::

	tags {
	    hosttags = 1
	    local {}
	}

And add the ``local`` tag to all local volume groups. For example:

::

	vgchange --addtag local rootvg

Finally you need to rebuild the initrd/initramfs to prevent shared vg activation at boot.

/etc/lvm/lvm_{node}.conf
------------------------

Create this file, {node} being the output of uname -n and add the following configuration:

::

	activation { volume_list = ["@local", "@{node}"] }

Windows specificities
=====================

Dependencies
------------

The OpenSVC agent on Windows depends on:

- Python 2.6+

- Python win32 library

- Microsoft fcinfo for Fibre Channel SAN reporting (optional)


The provided OpenSVC executable installer brings everything except fcinfo tool.


Silent Install
--------------

It's possible to trigger a silent install by using the /S (uppercase) command line switch:

::
	
	OpenSVC.X.Y.exe /S

There's also a command line option to specify the target installation folder (no quotes in folder name even with spaces inside):

::

	OpenSVC.X.Y.exe /S  /D=C:\My Path with spaces

Graphical Install
-----------------
	
Double click on OpenSVC.X.Y.exe and follow install wizard

Upgrade
-------

Upgrading the OpenSVC package manually is the same as an installation from scratch:

::

	OpenSVC.X.Z.exe /S

The installer deals with installation directory detection, and upgrade software in the accurate folder. It's still a best practice to have a system/data backup before upgrading OpenSVC software.

Mac OS X specificities
======================

CLI Install
-----------

::

        curl -o /tmp/opensvc.latest.pkg http://repo.opensvc.com/macos-pkg/current  
        installer -pkg /tmp/opensvc.latest.pkg  -target /


CLI Uninstall
-------------

As Mac OS does not provide a clean way to remove packages, we do it by ourselves

.. warning:: Backup any configuration file (/opt/opensvc/etc/) before removing them from the hard disk drive

::
        
        rm -rf /opt/opensvc
        rm -f /Library/LaunchDaemons/com.opensvc.svcmgr.plist
        pkgutil --forget com.opensvc.agent
        crontab -l | grep -v '/opt/opensvc/bin' > /tmp/cron.new ; crontab /tmp/cron.new

CLI Upgrade
-----------

As other OS flavors, agent upgrade can be triggered by

::

        /opt/opensvc/bin/nodemgr updatepkg

.. note:: this works only if repopkg is defined in ``/opt/opensvc/etc/node.conf`` file ( ``<OSVCROOT>/bin/nodemgr set --param node.repopkg --value http://repo.opensvc.com/`` )
