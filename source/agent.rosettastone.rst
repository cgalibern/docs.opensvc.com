Rosetta Stone
*************

Clusterwares
============

+------------------------------------+------------------------------+-------------------------------+
| OpenSVC                            | Veritas Cluster Server (VCS) | PowerHA (HACMP)               |
+====================================+==============================+===============================+
| om daemon start                    | hastart                      | clstart                       |
+------------------------------------+------------------------------+-------------------------------+
| om daemon stop                     | hastop                       | clstop                        |
+------------------------------------+------------------------------+-------------------------------+
| om mon                             | hastatus                     | clstat                        |
+------------------------------------+------------------------------+-------------------------------+
| om daemon join                     | hasys -add                   |                               |
+------------------------------------+------------------------------+-------------------------------+
| om daemon leave                    | hasys -delete                |                               |
+------------------------------------+------------------------------+-------------------------------+
| om node freeze                     | hasys -freeze                |                               |
+------------------------------------+------------------------------+-------------------------------+
| om node thaw                       | hasys -unfreeze              |                               |
+------------------------------------+------------------------------+-------------------------------+
| om <path> create                   | hagrp -add                   |                               |
+------------------------------------+------------------------------+-------------------------------+
| om <path> delete                   | hagrp -delete                |                               |
+------------------------------------+------------------------------+-------------------------------+
| om '*' ls                          | hagrp -list                  | cllsgrp                       |
+------------------------------------+------------------------------+-------------------------------+
| om <path> start                    | hagrp -online <group>        | clRGmove -g <RG> -n <node> -u |
+------------------------------------+------------------------------+-------------------------------+
| om <path> stop                     | hagrp -offline <group>       | clRGmove -g <RG> -n <node> -d |
+------------------------------------+------------------------------+-------------------------------+
| om <path> switch --to <node>       | hagrp -switch <group> <sys>  | clRGmove -s <RG> -n <node> -m |
+------------------------------------+------------------------------+-------------------------------+
| om <path> freeze                   | hagrp -freeze <group>        |                               |
+------------------------------------+------------------------------+-------------------------------+
| om <path> thaw                     | hagrp -unfreeze <group>      |                               |
+------------------------------------+------------------------------+-------------------------------+
| om <path> start --rid <res>        | hares -online <res>          |                               |
+------------------------------------+------------------------------+-------------------------------+
| om <path> stop --rid <res>         | hares -offline <res>         |                               |
+------------------------------------+------------------------------+-------------------------------+

Orchestators
============

Creating Objects
++++++++++++++++

+------------------------------------------------------+---------------------------------------------------+
| OpenSVC                                              | Kubernetes                                        |
+======================================================+===================================================+
| **Creating Objects**                                                                                     |
+------------------------------------------------------+---------------------------------------------------+
| om create --config ./my-manifest.json                | kubectl create -f ./my-manifest.yaml              |
+------------------------------------------------------+---------------------------------------------------+
| cat <cf> | om create                                 | cat <cf> | kubectl create -f -                    |
+------------------------------------------------------+---------------------------------------------------+
| om create --config secret.json                       | kubectl create -f secret.yml                      |
| om ns1/sec/mysec                                     |                                                   |
+------------------------------------------------------+---------------------------------------------------+
| **Viewing and Finding**                                                                                  |
+------------------------------------------------------+---------------------------------------------------+
| om '*' ls                                            | kubectl get services                              |
|                                                      | kubectl get pods                                  |
+------------------------------------------------------+---------------------------------------------------+
| om container.type=docker ls                          | kubectl get pods -o jsonpath=...                  |
+------------------------------------------------------+---------------------------------------------------+
| om <path> print config --format json                 | kubectl describe svc <svc>                        |
+------------------------------------------------------+---------------------------------------------------+
| **Updating**                                                                                             |
+------------------------------------------------------+---------------------------------------------------+
| om <path> set --kw ip#0.expose=80:8080/tcp           | kubectl expose rc nginx --port=80                 |
|                                                      | --target-port=8000                                |
+------------------------------------------------------+---------------------------------------------------+
| om <svc> set --kw                                    | kubectl annotate pods my-pod                      |
| env.icon_url=http://goo.gl/XXBTWq                    | icon-url=http://goo.gl/XXBTWq                     |
+------------------------------------------------------+---------------------------------------------------+
| om <svc> get container#0.run_image |                 | kubectl get pod mypod -o yaml                     | 
| sed 's/\(.*\):.*$/\1:v4/' |                          | sed 's/\(image: myimage\):.*$/\1:v4/'             |
| xargs om <svc> set --kw container#0.run_image        | kubectl replace -f -                              |
+------------------------------------------------------+---------------------------------------------------+
| om <svc> edit                                        | kubectl edit svc/docker-registry                  |
+------------------------------------------------------+---------------------------------------------------+
| **Scaling**                                                                                              |
+------------------------------------------------------+---------------------------------------------------+
| om foo scale --to 3                                  | kubectl scale --replicas=3 rs/foo                 |
+------------------------------------------------------+---------------------------------------------------+
| om foo,bar scale --to 3                              | kubectl scale --replicas=3 rs/foo rs/bar          |
+------------------------------------------------------+---------------------------------------------------+
| **Deleting**                                                                                             |
+------------------------------------------------------+---------------------------------------------------+
| om foo,baz purge                                     | kubectl delete pod,service baz foo --all          |
+------------------------------------------------------+---------------------------------------------------+
| om env.name=myLabel delete --unprovision             | kubectl delete pods,services -l name=myLabel      |
+------------------------------------------------------+---------------------------------------------------+
| **Interacting with Resources**                                                                           |
+------------------------------------------------------+---------------------------------------------------+
| om foo logs                                          | kubectl logs my-pod                               |
| om foo logs --local                                  |                                                   |
+------------------------------------------------------+---------------------------------------------------+
| om foo -f logs                                       | kubectl logs -f my-pod                            |
+------------------------------------------------------+---------------------------------------------------+
| om foo docker run -it busybox sh                     | kubectl run -i --tty busybox --image=busybox --   |
|                                                      | sh                                                |
+------------------------------------------------------+---------------------------------------------------+
| om foo docker attach -i {container#1}                | kubectl attach my-pod -i                          |
+------------------------------------------------------+---------------------------------------------------+
| om foo docker exec {container#1} ls /                | kubectl exec my-pod -c my-container -- ls /       |
+------------------------------------------------------+---------------------------------------------------+
| **Interacting with Nodes and Cluster**                                                                   |
+------------------------------------------------------+---------------------------------------------------+
| om node freeze --local                               | kubectl cordon my-node                            |
| om node freeze --node my-node                        |                                                   |
+------------------------------------------------------+---------------------------------------------------+
| om '**' stop                                         | kubectl drain my-node                             |
+------------------------------------------------------+---------------------------------------------------+
| om node thaw --local                                 | kubectl uncordon my-node                          |
| om node thaw --node my-node                          |                                                   |
+------------------------------------------------------+---------------------------------------------------+
| om daemon status --format json                       | kubectl cluster-info dump                         |
+------------------------------------------------------+---------------------------------------------------+
| om node set --kw env.dedicated=special_user          | kubectl taint nodes foo                           |
| # plus constraints or node selector in services      | dedicated=special-user:NoSchedule                 |
+------------------------------------------------------+---------------------------------------------------+


